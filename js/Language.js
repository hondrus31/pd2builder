export default class e{constructor(e,t){this.dictionary,this.used=t,this.loadDictionary(e)}loadDictionary(t){for(const r in t){const s=t[r];if("string"==typeof s){e.LOCATEREGEX.lastIndex=0;const[,...a]=e.LOCATEREGEX.exec(s)||[];if(0===a.length)continue;t[r]=t=>e.refFormat(e.replaceFormat(s,t.rep),t.ref)}else this.loadDictionary(s)}this.dictionary=t}get(e=""){const t=e.split(".");let r=this.dictionary;for(const e of t)r=r[e];return r}static replaceFormat(e,t){for(const r in t)e=e.replace(new RegExp(`%{${r}}`,"g"),t[r]);return e}static refFormat(t,r){e.REFREGEX.lastIndex=0;const[,...s]=e.REFREGEX.exec(t)||[];if(Array.isArray(r)&&s.length!==r.length)throw new Error("The array should have the same amount of functions as the lang text has variable as!");for(let e=0;e<s.length;e++)t=t.replace(new RegExp(`&{${s[e]}}`),r[e](s[e]));return t}}e.LOCATEREGEX=/(%|&){(.+)}/g,e.REFREGEX=/&{(.+)}/g,e.ref=new Map([["system.credits.p2",{ref:[e=>`<a href="https://github.com/r-paydaybuilds/pd2builder/blob/master/CONTRIBUTORS.md">${e}</a>`]}],["system.credits.license",{ref:[e=>`<a href="https://opensource.org/licenses/MIT">${e}</a>`]}]]);
