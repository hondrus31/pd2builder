import{EventDispatcher as t,Clock as e,Vector2 as i}from"https://unpkg.com/three@0.110.0/build/three.module.js";export default class o{constructor(t,o,s){this.camera=t,this.canvas=o,this.object=s,this.clock=new e,this.mouseStarted=!1,o.addEventListener("mousedown",()=>this.mouseStarted=!0),o.addEventListener("mouseup",this.onMouseLeave.bind(this)),o.addEventListener("mouseleave",this.onMouseLeave.bind(this)),o.addEventListener("mousemove",this.onMouseMove.bind(this)),this.touch=null,this.lastVector=new i,this.newVector=new i,this.deltaVector=new i,o.addEventListener("touchstart",t=>{this.touch||(this.touch=t.touches.item(0),this.lastVector.set(this.touch.pageX,this.touch.pageY))}),o.addEventListener("touchmove",this.onTouchMove.bind(this)),o.addEventListener("touchend",this.onTouchLeave.bind(this)),o.addEventListener("touchcancel",this.onTouchLeave.bind(this))}onMouseMove(t){this.mouseStarted&&(t.preventDefault(),this.object.rotation.y+=2*Math.PI*t.movementX/this.canvas.width,this.object.rotation.x+=2*Math.PI*t.movementY/this.canvas.width,this.dispatchEvent({type:"move"}))}onMouseLeave(){this.mouseStarted=!1,this.clock.getDelta(),requestAnimationFrame(this.updateRotation.bind(this))}onTouchMove(t){t.preventDefault();for(const e of t.changedTouches)if(e.identifier===this.touch.identifier){this.newVector.set(e.pageX,e.pageY),this.deltaVector.subVectors(this.newVector,this.lastVector),this.object.rotation.y+=2*Math.PI*this.deltaVector.x/this.canvas.width,this.object.rotation.x+=2*Math.PI*this.deltaVector.y/this.canvas.width,this.lastVector.copy(this.newVector);break}this.dispatchEvent({type:"move"})}onTouchLeave(t){let e=!1;for(const i of t.touches)i.identifier===this.touch.identifier&&(e=!0);if(e||(this.touch=null),t.touches.length>0)return this.touch=t.touches.item(0),void this.lastVector.set(this.touch.pageX,this.touch.pageY);this.clock.getDelta(),requestAnimationFrame(this.updateRotation.bind(this))}updateRotation(){if(this.mouseStarted||this.touch)return;const t=this.object.quaternion.clone();0==t.x&&0==t.z||(t.x=0,t.z=0,this.object.quaternion.slerp(t,2*this.clock.getDelta()),requestAnimationFrame(this.updateRotation.bind(this)),this.dispatchEvent({type:"move"}))}}Object.assign(o.prototype,t.prototype);
